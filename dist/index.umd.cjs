(function(t,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],n):(t=typeof globalThis<"u"?globalThis:t||self,n(t.useTeleport={},t.Vue))})(this,function(t,n){"use strict";const c=Symbol("Teleport"),u=n.defineComponent({name:"TeleportView",inheritAttrs:!1,props:{name:{type:[String,Symbol],default:"default"}},compatConfig:{MODE:3},setup({name:i}){const s=n.inject(c),o=n.computed(()=>{var e;return[...((e=s==null?void 0:s.get(i))==null?void 0:e.values())??[]]});return()=>o.value.map(e=>n.h(e.Comp,{...n.unref(e.props),ref:p=>e.instance=p&&n.markRaw(p),onVnodeMounted:()=>{e.resolveInstance()}}))}}),d={install(i){i.provide(c,n.reactive(new Map))}};function f(i,s="default"){const o=n.inject(c);if(!o)throw new Error("没有找到teleportViewsMap，请注册插件TeleportPlugin");const e={Comp:n.markRaw(i),resolveInstance:()=>{}},p=()=>{var l;(l=o==null?void 0:o.get(s))==null||l.delete(e)},a=()=>e.instance,m=async l=>{let r=o.get(s);if(e.props=l,r!=null&&r.has(e))return a();const T=new Promise(g=>{e.resolveInstance=()=>{g(a())}});return r?r.add(e):(r=new Set,r.add(e),o.set(s,r)),T};return n.onScopeDispose(p),{getTeleportInstance:a,mount:m,unmount:p}}t.TeleportPlugin=d,t.TeleportView=u,t.useTeleport=f,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
